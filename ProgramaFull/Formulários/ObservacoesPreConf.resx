<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        H830kvoO8wAAAABJRU5ErkJggg==
</value>
  </data>
</root>